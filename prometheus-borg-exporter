#!/bin/bash

usage() { echo "Usage: $0 -r repository" 1>&2; exit 1; }
while getopts "r:" opt; do
      	case $opt in
	   	r)
			REPOSITORY=${OPTARG}
			;;
		\?)
			echo "Invalid option: -$OPTARG" >&2
			exit 1
			;;
		:)
			echo "Option -$OPTARG requires an argument." >&2
			usage
			exit 1
			;;
	esac
done
shift $((OPTIND-1))

if [ -z "${REPOSITORY}" ]; then
	usage
	exit 1
fi

echo "Updating Prometheus for Borg repository $REPOSITORY"

set -eu

BORG_PASSPHRASE=""
#REPOSITORY=tbm-backup-tigre-bleu-multimedia@tbm-bk-02.tigre-bleu.fr:tbm-wb-02

TEXTFILE_COLLECTOR_DIR=/var/lib/prometheus/node-exporter
PROM_FILE=$TEXTFILE_COLLECTOR_DIR/backup.prom
TMP_FILE=$PROM_FILE.$$
HOSTNAME=$(hostname)
LIST=$(BORG_PASSPHRASE=$BORG_PASSPHRASE borg list $REPOSITORY |awk '{print $1}')
COUNTER=0

mkdir -p $TEXTFILE_COLLECTOR_DIR

for i in $LIST; do
	COUNTER=$((COUNTER+1))
done
echo "backup_count{host=\"${HOSTNAME}\"} $COUNTER" > $TMP_FILE

for i in $LIST; do
	BORG_INFO=$(BORG_PASSPHRASE=$BORG_PASSPHRASE borg info "$REPOSITORY::$i")
	UPDATE_DATE_RAW=$(echo "$BORG_INFO" | grep "Time (end)" | awk '{print $4}')
	UPDATE_TIME_RAW=$(echo "$BORG_INFO" | grep "Time (end)" | awk '{print $5}')
	UPDATE_DATE=$(date -d "$UPDATE_DATE_RAW $UPDATE_TIME_RAW" +%s)
	echo "backup_last_update{host=\"${HOSTNAME}\", archive=\"$(echo "$i"  | cut -d '-' -f 1)\"} $UPDATE_DATE">> $TMP_FILE
	echo "backup_files{host=\"${HOSTNAME}\", archive=\"$(echo "$i"  | cut -d '-' -f 1)\"} $(echo "$BORG_INFO" | grep "Number of files" | awk '{print $4}')" >> $TMP_FILE
	echo "backup_chunks_unique{host=\"${HOSTNAME}\", archive=\"$(echo "$i"  | cut -d '-' -f 1)\"} $(echo "$BORG_INFO" | grep "Chunk index" | awk '{print $3}')" >> $TMP_FILE
	echo "backup_chunks_total{host=\"${HOSTNAME}\", archive=\"$(echo "$i"  | cut -d '-' -f 1)\"} $(echo "$BORG_INFO" | grep "Chunk index" | awk '{print $4}')" >> $TMP_FILE

	function calc_bytes {
		NUM=$1
		UNIT=$2
		
		case "$UNIT" in
			kB)
				echo $NUM | awk '{ print $1 * 1024 }'
				;;
			MB)
				echo $NUM | awk '{ print $1 * 1024 * 1024 }'
				;;
			GB)
				echo $NUM | awk '{ print $1 * 1024 * 1024 * 1024 }'
				;;
			TB)
				echo $NUM | awk '{ print $1 * 1024 * 1024 * 1024 * 1024 }'
				;;
		esac
	}

	# byte size
	LAST_SIZE=$(calc_bytes $(echo "$BORG_INFO" |grep "This archive" |awk '{print $3}') $(echo "$BORG_INFO" |grep "This archive" |awk '{print $4}'))
	LAST_SIZE_COMPRESSED=$(calc_bytes $(echo "$BORG_INFO" |grep "This archive" |awk '{print $5}') $(echo "$BORG_INFO" |grep "This archive" |awk '{print $6}'))
	LAST_SIZE_DEDUP=$(calc_bytes $(echo "$BORG_INFO" |grep "This archive" |awk '{print $7}') $(echo "$BORG_INFO" |grep "This archive" |awk '{print $8}'))
	TOTAL_SIZE=$(calc_bytes $(echo "$BORG_INFO" |grep "All archives" |awk '{print $3}') $(echo "$BORG_INFO" |grep "All archives" |awk '{print $4}'))
	TOTAL_SIZE_COMPRESSED=$(calc_bytes $(echo "$BORG_INFO" |grep "All archives" |awk '{print $5}') $(echo "$BORG_INFO" |grep "All archives" |awk '{print $6}'))
	TOTAL_SIZE_DEDUP=$(calc_bytes $(echo "$BORG_INFO" |grep "All archives" |awk '{print $7}') $(echo "$BORG_INFO" |grep "All archives" |awk '{print $8}'))
	

	echo "backup_last_size{host=\"${HOSTNAME}\", archive=\"$(echo "$i"  | cut -d '-' -f 1)\"} $LAST_SIZE" >> $TMP_FILE
	echo "backup_last_size_compressed{host=\"${HOSTNAME}\", archive=\"$(echo "$i"  | cut -d '-' -f 1)\"} $LAST_SIZE_COMPRESSED" >> $TMP_FILE
	echo "backup_last_size_dedup{host=\"${HOSTNAME}\", archive=\"$(echo "$i"  | cut -d '-' -f 1)\"} $LAST_SIZE_DEDUP" >> $TMP_FILE
	echo "backup_total_size{host=\"${HOSTNAME}\", archive=\"$(echo "$i"  | cut -d '-' -f 1)\"} $TOTAL_SIZE" >> $TMP_FILE
	echo "backup_total_size_compressed{host=\"${HOSTNAME}\", archive=\"$(echo "$i"  | cut -d '-' -f 1)\"} $TOTAL_SIZE_COMPRESSED" >> $TMP_FILE
	echo "backup_total_size_dedup{host=\"${HOSTNAME}\", archive=\"$(echo "$i"  | cut -d '-' -f 1)\"} $TOTAL_SIZE_DEDUP" >> $TMP_FILE
done

mv $TMP_FILE $PROM_FILE
